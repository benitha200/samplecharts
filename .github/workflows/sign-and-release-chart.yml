name: Sign and Push Helm Chart

on:
  push:
    tags:
      - 'v.*'
    branches:
      - main

jobs:
  sign-and-push:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Configure Git
      run: |
        git config user.name "benitha200"
        git config user.email "benithaiyuyisenga2002@gmail.com"
    
    - name: Set up Helm
      uses: azure/setup-helm@v4.3.0
      with:
        version: v3.14.3

    - name: Prepare GPG key for chart-releaser
      run: |
        # Create .cr-gpg directory explicitly
        mkdir -p .cr-gpg

        # Use temporary GNUPGHOME so gpg commands don't interfere with user's keyring
        export GNUPGHOME=$(mktemp -d)

        # Import private key into temporary keyring
        echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import

        # Trust all imported keys (avoid prompts)
        echo "trust-model always" >> "$GNUPGHOME/gpg.conf"
        echo "allow-loopback-pinentry" >> "$GNUPGHOME/gpg-agent.conf"

        # Restart gpg-agent to load new config
        gpgconf --kill gpg-agent || true
        gpgconf --launch gpg-agent

        # Export public keyring and secret keyring into .cr-gpg directory
        gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" --export > .cr-gpg/pubring.gpg
        gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" --export-secret-keys > .cr-gpg/secring.gpg

        # Save passphrase for chart-releaser
        echo "$GPG_PASSPHRASE" > .cr-gpg/passphrase

        # List files to verify
        ls -la .cr-gpg
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    - name: Add repositories
      run: |
        for dir in $(ls -d charts/springboot-chart/*/); do
          helm dependency list $dir 2> /dev/null | tail +2 | head -n -1 | awk '{ print "helm repo add " $1 " " $3 }' | while read cmd; do $cmd; done
        done
      
    - name: Dependency update
      run: |
        cd charts/springboot-chart
        helm dependency update
    
    - name: Move Chart.yaml to templates folder
      run: |
        echo "Moving Chart.yaml to correct directory"
        cp charts/springboot-chart/Chart.yaml  charts/springboot-chart/templates/Chart.yaml

    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.7.0
      with:
        charts_dir: ./charts/springboot-chart/
      env:
        CR_TOKEN: ${{ secrets.PAT }}
        CR_KEY: ${{ secrets.CR_KEY_ID }}
        CR_SIGN: true
        CR_SKIP_EXISTING: true
        CR_GPG_DIR: .cr-gpg
