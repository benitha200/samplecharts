name: Sign and Push Helm Chart

on:
  push:
    tags:
      - 'v.*'
    branches:
      - main
jobs:
  sign-and-push:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Configure Git
      run: |
        git config user.name "benitha200"
        git config user.email "benitha200@users.noreply.github.com"
    
    - name: Set up Helm
      uses: azure/setup-helm@v4.3.0
      with:
        version: v3.14.3

    - name: Import GPG private key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG
    
    - name: Prepare GPG key #this step is for using exported keys and make your github runner
      run: |
        gpg_dir=.cr-gpg
        mkdir "$gpg_dir"
        keyring="$gpg_dir/secring.gpg" #referring keyring to private key of gpg
        echo "${{secrets.SECRING_BASE64}}" | base64 -d > "$keyring"
        passphrase_file="$gpg_dir/passphrase"
        echo "$GPG_PASSPHRASE" > "$passphrase_file" #storing passphrase data into a file
        echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV" #saving passphrase into github-environment
        echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV" #saving private key into github-environemnt
      env:
        GPG_KEYRING_BASE64: "${{ secrets.GPG_PRIVATE_KEY_BASE64 }}" #Referring secrets of github above
        GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"  

    - name: List files in .cr-gpg
      run: ls -la .cr-gpg

    - name: Move CR folder to charts/springboot-chart/templates
      run:  |
        cp -rf .cr-gpg charts/springboot-chart/templates
        cp charts/springboot-chart/Chart.yaml charts/springboot-chart/templates

    - name: Characteristics for .cr-gpg/secring.gpg
      run: |
        file charts/springboot-chart/templates/.cr-gpg/secring.gpg
        wc .cr-gpg/secring.gpg
        wc charts/springboot-chart/templates/.cr-gpg/secring.gpg
        
    - name: Add repositories
      run: |
        for dir in $(ls -d charts/springboot-chart/*/); do
          helm dependency list $dir 2> /dev/null | tail +2 | head -n -1 | awk '{ print "helm repo add " $1 " " $3 }' | while read cmd; do $cmd; done
        done
      
    - name: Dependency update
      run: |
        cd charts/springboot-chart/templates
        helm dependency update
        

    - name: Run chart-releaser #this is used to generate new version of helm chart along with some file with extension .prov
      uses: helm/chart-releaser-action@v1.7.0
      with:
        charts_dir: ./charts/springboot-chart/
        
      env:
        CR_TOKEN: "${{ secrets.PAT }}"
        CR_KEY: "${{ secrets.CR_KEY_ID }}" #Key name used while creating key
        CR_SIGN: true
        CR_SKIP_EXISTING: true
        # CR_MARK_AS_LATEST: true
    
